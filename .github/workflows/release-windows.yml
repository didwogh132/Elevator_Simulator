name: Build & Release (Windows, Qt6, VS)

on:
  push:
    tags:
      - "v*.*.*"   # v0.1.0 같은 태그 푸시 시 실행
  workflow_dispatch:   # 수동 실행 허용

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Qt 6
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.7.3
          host: windows
          target: desktop
          arch: msvc2019_64   # msvc2022_64가 없으면 보통 이 아키텍처로 동작 okay
          cache: true

      - name: Configure (CMake, VS generator)
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Package with windeployqt -> dist
        shell: pwsh
        run: |
          # 실행 파일 이름/경로를 자동 탐색 (Release 우선)
          $exe = (Get-ChildItem -Recurse build -Filter *.exe | Where-Object { $_.FullName -match '\\Release\\' } | Select-Object -First 1 -Expand FullName)
          if (-not $exe) { $exe = (Get-ChildItem -Recurse build -Filter *.exe | Select-Object -First 1 -Expand FullName) }
          if (-not $exe) { throw "No exe found in build output." }
          Write-Host "EXE => $exe"

          # windeployqt
          $windeploy = "windeployqt.exe"
          & $windeploy $exe --release --compiler-runtime --qmldir . --dir dist

          # exe도 dist에 보증 복사
          Copy-Item $exe dist/ -Force

          # 압축
          Compress-Archive -Path dist\* -DestinationPath Elevator_Simulator_win_x64.zip -Force

      - name: Upload CI artifact
        uses: actions/upload-artifact@v4
        with:
          name: Elevator_Simulator_win_x64
          path: Elevator_Simulator_win_x64.zip

      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: Elevator_Simulator_win_x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
